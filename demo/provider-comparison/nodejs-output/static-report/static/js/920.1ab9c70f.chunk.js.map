{"version":3,"file":"static/js/920.1ab9c70f.chunk.js","mappings":"gSAkBO,MAAMA,EAAyBA,KACpC,MAAMC,GAAoBC,EAAAA,EAAAA,IAAS,aAC7BC,GAA2BD,EAAAA,EAAAA,IAAS,0BACpCE,GAA6BF,EAAAA,EAAAA,IACjC,yCAGIG,EAAgBJ,OAClBK,EACAH,EACAI,EAAAA,EAC0B,OAA1BH,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4BI,OAAOH,cAEjCI,GAAWC,EAAAA,EAAAA,MAMjB,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAW,CAACC,QAAS,CAAEC,QAAS,aAAcJ,UAC7CC,EAAAA,EAAAA,KAACI,EAAAA,EAAO,CAAAL,UACNF,EAAAA,EAAAA,MAACQ,EAAAA,EAAc,CAAAN,SAAA,EACbC,EAAAA,EAAAA,KAACM,EAAAA,EAAW,CAAAP,SAAC,kBACbC,EAAAA,EAAAA,KAACM,EAAAA,EAAW,CAAAP,UACVC,EAAAA,EAAAA,KAACO,EAAAA,GAAqB,CACpBC,kBAAmBjB,EACnBkB,SAbWC,IACvBf,EAAS,0BAA4Be,EAAQC,IAAI,cAkB/CX,EAAAA,EAAAA,KAACY,EAAAA,EAAO,KACRZ,EAAAA,EAAAA,KAACC,EAAAA,GAAW,CAACY,QAASC,EAAAA,GAAoBC,MAAMhB,UAC9CF,EAAAA,EAAAA,MAACmB,EAAAA,EAAW,CAAAjB,SAAA,EACVC,EAAAA,EAAAA,KAACiB,EAAAA,EAAI,CAACC,UAAU,KAAInB,SAAC,cACrBC,EAAAA,EAAAA,KAACiB,EAAAA,EAAI,CAACC,UAAU,QAAOnB,SAAC,uGAK5BC,EAAAA,EAAAA,KAACC,EAAAA,GAAW,CAACY,QAASC,EAAAA,GAAoBX,QAAQJ,UAChDC,EAAAA,EAAAA,KAACmB,EAAAA,GAAe,CAAC5B,cAAeA,EAAe6B,cAAc,QAE9D,C","sources":["pages/insights-list/insights-list.tsx"],"sourcesContent":["import React from \"react\";\nimport { useMatch, useNavigate } from \"react-router-dom\";\n\nimport {\n  Divider,\n  PageSection,\n  PageSectionVariants,\n  Text,\n  TextContent,\n  Toolbar,\n  ToolbarContent,\n  ToolbarItem,\n} from \"@patternfly/react-core\";\n\nimport { ALL_APPLICATIONS_ID } from \"@app/Constants\";\nimport { Context, SimpleContextSelector } from \"@app/context/simple-context\";\nimport { ViolationsTable } from \"@app/shared/components/violations-table\";\n\nexport const InsightsList: React.FC = () => {\n  const matchInsightsPage = useMatch(\"/insights\");\n  const matchAllApplicationsPage = useMatch(\"/insights/applications\");\n  const matchSingleApplicationPage = useMatch(\n    \"/insights/applications/:applicationId\"\n  );\n\n  const applicationId = matchInsightsPage\n    ? undefined\n    : matchAllApplicationsPage\n    ? ALL_APPLICATIONS_ID\n    : matchSingleApplicationPage?.params.applicationId;\n\n  const navigate = useNavigate();\n\n  const onContextChange = (context: Context) => {\n    navigate(\"/insights/applications/\" + context.key);\n  };\n\n  return (\n    <>\n      <PageSection padding={{ default: \"noPadding\" }}>\n        <Toolbar>\n          <ToolbarContent>\n            <ToolbarItem>Application:</ToolbarItem>\n            <ToolbarItem>\n              <SimpleContextSelector\n                contextKeyFromURL={applicationId}\n                onChange={onContextChange}\n              />\n            </ToolbarItem>\n          </ToolbarContent>\n        </Toolbar>\n      </PageSection>\n      <Divider />\n      <PageSection variant={PageSectionVariants.light}>\n        <TextContent>\n          <Text component=\"h1\">Insights</Text>\n          <Text component=\"small\">\n            This report provides a concise summary of all insights identified - issues with zero effort.\n          </Text>\n        </TextContent>\n      </PageSection>\n      <PageSection variant={PageSectionVariants.default}>\n        <ViolationsTable applicationId={applicationId} insightsMode={true} />\n      </PageSection>\n    </>\n  );\n};"],"names":["InsightsList","matchInsightsPage","useMatch","matchAllApplicationsPage","matchSingleApplicationPage","applicationId","undefined","ALL_APPLICATIONS_ID","params","navigate","useNavigate","_jsxs","_Fragment","children","_jsx","PageSection","padding","default","Toolbar","ToolbarContent","ToolbarItem","SimpleContextSelector","contextKeyFromURL","onChange","context","key","Divider","variant","PageSectionVariants","light","TextContent","Text","component","ViolationsTable","insightsMode"],"sourceRoot":""}